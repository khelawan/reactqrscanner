{"version":3,"sources":["logo.svg","serviceWorker.js","components/qr.js","components/header.js","components/list.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","_pdata","modalStyle","backgroundColor","zIndex","borderRadius","Test","props","handleScan","data","setState","result","modalClass","console","log","state","scanData","localStorage","setItem","getItem","indexOf","split","trim","handleError","err","error","that","this","axios","post","then","response","clear","catch","className","delay","onError","onScan","style","width","onClick","onClickSendData","onClickClose","aria-label","Component","imgStyle","maxHeight","Header","role","href","src","height","_list","marginLeft","marginRight","marginBottom","boxShadow","List","useState","participants","pdata","_getData","setGetData","get","type","placeholder","onChange","e","filter","v","name","toLowerCase","target","value","map","email_id","organisation","App","show","setShow","class","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.254a4449.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      console.log(\"sw registered\");\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react'\nimport QrReader from 'react-qr-reader'\nimport axios from 'axios' \nimport 'bulma/css/bulma.css'\n\n\nlet _pdata = \"\";\n\nlet modalClass=\"modal\";\n\nconst modalStyle = {\n    backgroundColor: 'white',\n    zIndex: 1,\n    borderRadius:'5px'\n}\n\nclass Test extends Component {\n    \n  constructor(props){\n      super(props)\n    this.state = {\n        modalClass:\"modal \"\n    }\n  }\n\n  componentWillMount(){\n    //console.log(this)\n  }\n  handleScan = data => {\n    if (data) {\n      this.setState({\n        result: data,  \n      })\n      this.setState({\n        modalClass : \"modal is-active\"\n    })\n    console.log(this.state);\n      const scanData = data;\n      console.log(scanData);\n      localStorage.setItem(\"scanData\",scanData);\n      _pdata = localStorage.getItem(\"scanData\");\n      if(_pdata == _pdata.indexOf(\"Booking Id:\")){\n        _pdata = _pdata.split(\"Booking Id:\");\n        _pdata = _pdata[1];\n        _pdata = _pdata.trim();\n      }  \n    }\n  }\n  handleError = err => {\n    console.error(err)\n  }\n\n  onClickSendData(){\n    const that = this;\n    \n    axios.post('https://xo3dnghur7.execute-api.us-east-2.amazonaws.com/dev/registration_app_user_check_in', {\n            \"booking_id\": _pdata   \n      })\n      .then(function (response) {\n        console.log(response);\n        localStorage.clear();\n        that.setState({\n            modalClass : \"modal\"\n        })\n        console.log(that.state)\n      })\n      .catch(function (error) {\n        console.log(error);\n        localStorage.clear();\n      });\n}\n\n  render() {\n    return (\n      <div className='scan'>\n        <QrReader\n          delay={300}\n          onError={this.handleError}\n          onScan={this.handleScan}\n          style={{ width: '100%' }}\n        />\n        \n        <div className={this.state.modalClass}>\n        <div className=\"modal-background\"></div>\n        <div style={modalStyle}>\n        <div className=\"modal-content\">\n         <p>{this.state.result}</p>\n        </div>\n        <a className=\"button buttonCheck is-success\" onClick={() => this.onClickSendData()}>Check-In</a>\n        <a className=\"button is-danger buttonCheck\" onClick={() => this.onClickClose()}>close</a>\n        </div>\n       <button className=\"modal-close is-large\" aria-label=\"close\" onClick={() => this.onClickClose()}></button>\n      </div>  \n      </div>\n    )\n  } \n\n  onClickClose(){\n  const that = this;\n  that.setState({\n    modalClass : \"modal\"\n   })\n   console.log(that.state)\n  }\n}\n//<a className=\"button is-link is-rounded\">List</a>\n\nexport default Test;\n","import React from 'react';\n//import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css'\n\n\nconst imgStyle = {\n    maxHeight: '16.75rem'\n}\n\nconst Header = () => {\n    return(\n        <div>\n                    <nav className=\"navbar is-info\" role=\"navigation\" aria-label=\"main navigation\">\n                    <div className=\"navbar-brand\">\n                        <a className=\"navbar-item\" href=\"#\">\n                        <img style={imgStyle} src=\"https://firebasestorage.googleapis.com/v0/b/konfhub.appspot.com/o/'%2Fconference-photos%2F'logo2.png?alt=media&token=f8323ab6-d1f2-41cd-9cc9-dad39aeeefa6\" width=\"112\" height=\"28\"></img>\n                        </a>\n\n                       \n                    </div>\n\n                    \n                   </nav>\n        </div>\n\n    );\n\n}\nexport default Header;","import React, { useState } from 'react';\n\nimport 'bulma/css/bulma.css'\nimport axios from 'axios' \nimport { get } from 'https';\nlet _list = [];\n\n\n\nconst style = {\n    width: '96%',\n    marginLeft:'10px',\n    marginRight:'10px',\n    marginBottom:'10px',\n    boxShadow: '0px 0px 6px'\n}\n\nconst List = () =>{\n    const [participants, pdata] = useState([]);\n    const [_getData, setGetData] = useState(true);\n\n    const getData = () => {\n        if(!_getData)return;\n        axios.get('https://xo3dnghur7.execute-api.us-east-2.amazonaws.com/dev/registration_app_get_check_in_details?event_id=testkonfhubslsdeploymentb29912c5')\n        .then(function (response) {\n          // handle success\n           pdata(response.data);\n           _list = participants;\n           setGetData(false)        \n        })\n        .catch(function (error) {\n          // handle error\n          setGetData(false)  \n          console.log(error);\n        })\n    }\n\n\n    getData();\n    return(\n        <div className=\"list is-hoverable\">\n        <br />\n        <input style={style}  className=\"input is-rounded search-box\" type=\"text\" placeholder=\"Start typing to search\" onChange={e => {pdata(_list.filter(v => {\n            return v.name.toLowerCase().indexOf(e.target.value.toLowerCase()) > -1\n       }))\n   }} />\n        <br/>\n        {\n            participants.map(e => {\n                return(\n                    <a className=\"list-item\">\n             <p>Name:{e.name}</p><p>Email-id:{e.email_id}</p>\n             <p>Organisation:{e.organisation}</p>\n             </a>\n                )\n            })\n        }\n       </div>\n    )\n}\nconst ShowList = (props) => {\n    const [_data, setData] = useState(props.participants)\n    if(_data.length){\n        _data.map(e => {\n            return(\n             <a className=\"list-item\">\n             <p>Name:{e.name}</p><p>Email-id:{e.email_id}</p>\n             <p>Organisation:{e.organisation}</p>\n             </a>\n            )\n         })\n    }\n    else{\n        return(<div></div>)\n    }\n}\n\n\nexport default List","import React, {useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport './index.css';\nimport  '../src/components/main.css'\nimport 'bulma/css/bulma.css'\n//import App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Test from '../src/components/qr';\nimport Header from '../src/components/header';\nimport Search from '../src/components/search';\nimport List from '../src/components/list';\n\n\nfunction App() {\n  const [show, setShow] = useState(true);\n  return (\n    <div >\n        <Header/>  \n        \n        <div class=\"tabs is-toggle is-centered\">\n        <ul>\n          <li class=\"\" onClick={e => {setShow(true)}}>\n            <a>      \n          <span>Scan QR Code</span>\n            </a>\n          </li>\n        \n      \n          <li onClick={e => {setShow(false)}}>\n            <a>\n              <span>Scanned Participants</span>\n            </a>\n          </li>\n        </ul>\n      </div>\n      <div>\n        {\n            (()=>{\n                if(show){\n                  return <Test />\n                }else{\n                  return <List />\n                }\n            })()\n        }\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport  '../src/components/main.css'\nimport 'bulma/css/bulma.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n \nReactDOM.render(\n    <App />\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n//<Search/>"],"sourceRoot":""}